name: Deploy Docker Compose
run-name: Deploy docker compose
on: workflow_dispatch
env:
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:
  deploy:
    name: Deploy docker compose
    runs-on: ubuntu-latest
    steps:
      - run: echo "Job is running on ${{ runner.os }}"
      - run: echo "Branch name is ${{ github.ref }} and repository is ${{ github.repository }}."
      - name: Tailscale
        uses: tailscale/github-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_EPHEMERAL_KEY }}
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/server.key
          chmod 600 ~/.ssh/server.key
          cat >>~/.ssh/config <<END
          Host server
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/server.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
      - name: Create docker dir
        run: |
          ssh server 'mkdir -p ~/docker'
          ssh server 'mkdir -p ~/mnt/yaml/datasette'
          ssh server 'mkdir -p ~/mnt/yaml/prometheus'
      - name: Copy docker-compose to HCloud
        run: |
          scp docker-compose.yml server:~/docker
          scp metadata.yml server:~/mnt/yaml/datasette
          scp prometheus.yml server:~/mnt/yaml/prometheus
        working-directory: docker-compose
      - name: Prepare env file
        run: |
          cat >>~/.env <<END
          PG_BACKUP_IMAGE_URI=$PG_BACKUP_IMAGE_URI
          DATASETTE_IMAGE_URI=$DATASETTE_IMAGE_URI
          POSTGRES_USER=$POSTGRES_USER
          POSTGRES_PASS=$POSTGRES_PASS
          POSTGRES_DB=$POSTGRES_DB
          PGADMIN_DEFAULT_EMAIL=$PGADMIN_DEFAULT_EMAIL
          PGADMIN_DEFAULT_PASSWORD=$PGADMIN_DEFAULT_PASSWORD
          AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          END
          scp ~/.env server:~/docker
        env:
          PG_BACKUP_IMAGE_URI: ${{ secrets.PG_BACKUP_IMAGE_URI }}
          DATASETTE_IMAGE_URI: ${{ secrets.DATASETTE_IMAGE_URI }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASS: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          PGADMIN_DEFAULT_EMAIL: ${{ secrets.PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Run compose in HCloud
        run: |
          ssh server <<EOF
            cd ~/docker
            docker-compose pull
            docker-compose up --force-recreate --build -d
          EOF
      - name: Sleep for 2 minutes while server reboots
        run: sleep 2m
        shell: bash
      - name: Remove env file
        run: |
          ssh server 'rm ~/docker/.env'
      - run: echo "Job is ${{ job.status }}."
